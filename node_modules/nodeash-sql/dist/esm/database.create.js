var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
/* eslint-disable @typescript-eslint/no-explicit-any */
import * as mysql from 'mysql2/promise';
const createDb = (DB) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        console.log("Creating MySQL connection....");
        if (!DB.hostName) {
            console.log("No Database Config found please check databse configuration");
        }
        const connection = yield mysql.createConnection({
            host: DB.hostName,
            user: DB.username,
            password: DB.password,
        });
        console.log("Checking if Database 🛠️  Exist....");
        // Check if the database already exists
        const [rows] = yield connection.execute(`SHOW DATABASES LIKE '${DB.name}'`);
        if (rows.length > 0) {
            console.log(`Database 🛠️  "${DB.name}" exists.`);
            console.log(`Happy Hacking ฅ^•ﻌ•^ฅ 🚀🚀🚀`);
        }
        else {
            console.log("Creating Database 🛠️ ....");
            yield connection.execute(`CREATE DATABASE ${DB.name}`);
            console.log(`Database "${DB.name}" created. 🚀🚀🚀`);
        }
        // Close the connection
        yield connection.end();
        return true;
    }
    catch (error) {
        console.log(`Error creating or checking the database "${DB.name}"`);
        console.log(error);
        console.log(`Please create Database manually or check createDb function in mysql.connection`);
        return false;
    }
});
export default createDb;
